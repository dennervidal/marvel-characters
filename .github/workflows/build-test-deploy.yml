name: CI/CD

on: push

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Use Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --pure-lockfile --prefer-offline

      - name: Build app
        run: yarn build
      
      - name: Cache build
        uses: actions/cache@v2
        id: ci-build-cache
        with:
          path: ./*
          key: ${{ github.sha }}
        
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Restore build cache
        uses: actions/cache@v2
        id: ci-build-cache
        with:
          path: ./*
          key: ${{ github.sha }}
          
      - name: Test app
        run: yarn test:ci
        
  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - name: Restore build cache
        uses: actions/cache@v2
        id: ci-build-cache
        with:
          path: ./*
          key: ${{ github.sha }}
          
      - name: Deploy app
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: 'Deploy to GitHub pages:'
